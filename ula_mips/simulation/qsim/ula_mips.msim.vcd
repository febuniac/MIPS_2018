$comment
	File created using the following command:
		vcd file ula_mips.msim.vcd -direction
$end
$date
	Tue Oct 30 16:31:31 2018
$end
$version
	ModelSim Version 10.5b
$end
$timescale
	1ps
$end

$scope module mips_teste_vhd_vec_tst $end
$var wire 1 ! beq_teste $end
$var wire 1 " clk $end
$var wire 1 # dado_simula [31] $end
$var wire 1 $ dado_simula [30] $end
$var wire 1 % dado_simula [29] $end
$var wire 1 & dado_simula [28] $end
$var wire 1 ' dado_simula [27] $end
$var wire 1 ( dado_simula [26] $end
$var wire 1 ) dado_simula [25] $end
$var wire 1 * dado_simula [24] $end
$var wire 1 + dado_simula [23] $end
$var wire 1 , dado_simula [22] $end
$var wire 1 - dado_simula [21] $end
$var wire 1 . dado_simula [20] $end
$var wire 1 / dado_simula [19] $end
$var wire 1 0 dado_simula [18] $end
$var wire 1 1 dado_simula [17] $end
$var wire 1 2 dado_simula [16] $end
$var wire 1 3 dado_simula [15] $end
$var wire 1 4 dado_simula [14] $end
$var wire 1 5 dado_simula [13] $end
$var wire 1 6 dado_simula [12] $end
$var wire 1 7 dado_simula [11] $end
$var wire 1 8 dado_simula [10] $end
$var wire 1 9 dado_simula [9] $end
$var wire 1 : dado_simula [8] $end
$var wire 1 ; dado_simula [7] $end
$var wire 1 < dado_simula [6] $end
$var wire 1 = dado_simula [5] $end
$var wire 1 > dado_simula [4] $end
$var wire 1 ? dado_simula [3] $end
$var wire 1 @ dado_simula [2] $end
$var wire 1 A dado_simula [1] $end
$var wire 1 B dado_simula [0] $end
$var wire 1 C habEscMEM_teste $end
$var wire 1 D habEscReg_teste $end
$var wire 1 E habLeiMEM_teste $end
$var wire 1 F mux1_teste $end
$var wire 1 G mux2_teste $end
$var wire 1 H mux3_teste $end
$var wire 1 I mux4_teste $end
$var wire 1 J reset $end
$var wire 1 K saida [31] $end
$var wire 1 L saida [30] $end
$var wire 1 M saida [29] $end
$var wire 1 N saida [28] $end
$var wire 1 O saida [27] $end
$var wire 1 P saida [26] $end
$var wire 1 Q saida [25] $end
$var wire 1 R saida [24] $end
$var wire 1 S saida [23] $end
$var wire 1 T saida [22] $end
$var wire 1 U saida [21] $end
$var wire 1 V saida [20] $end
$var wire 1 W saida [19] $end
$var wire 1 X saida [18] $end
$var wire 1 Y saida [17] $end
$var wire 1 Z saida [16] $end
$var wire 1 [ saida [15] $end
$var wire 1 \ saida [14] $end
$var wire 1 ] saida [13] $end
$var wire 1 ^ saida [12] $end
$var wire 1 _ saida [11] $end
$var wire 1 ` saida [10] $end
$var wire 1 a saida [9] $end
$var wire 1 b saida [8] $end
$var wire 1 c saida [7] $end
$var wire 1 d saida [6] $end
$var wire 1 e saida [5] $end
$var wire 1 f saida [4] $end
$var wire 1 g saida [3] $end
$var wire 1 h saida [2] $end
$var wire 1 i saida [1] $end
$var wire 1 j saida [0] $end
$var wire 1 k zero $end

$scope module i1 $end
$var wire 1 l gnd $end
$var wire 1 m vcc $end
$var wire 1 n unknown $end
$var wire 1 o devoe $end
$var wire 1 p devclrn $end
$var wire 1 q devpor $end
$var wire 1 r ww_devoe $end
$var wire 1 s ww_devclrn $end
$var wire 1 t ww_devpor $end
$var wire 1 u ww_clk $end
$var wire 1 v ww_reset $end
$var wire 1 w ww_saida [31] $end
$var wire 1 x ww_saida [30] $end
$var wire 1 y ww_saida [29] $end
$var wire 1 z ww_saida [28] $end
$var wire 1 { ww_saida [27] $end
$var wire 1 | ww_saida [26] $end
$var wire 1 } ww_saida [25] $end
$var wire 1 ~ ww_saida [24] $end
$var wire 1 !! ww_saida [23] $end
$var wire 1 "! ww_saida [22] $end
$var wire 1 #! ww_saida [21] $end
$var wire 1 $! ww_saida [20] $end
$var wire 1 %! ww_saida [19] $end
$var wire 1 &! ww_saida [18] $end
$var wire 1 '! ww_saida [17] $end
$var wire 1 (! ww_saida [16] $end
$var wire 1 )! ww_saida [15] $end
$var wire 1 *! ww_saida [14] $end
$var wire 1 +! ww_saida [13] $end
$var wire 1 ,! ww_saida [12] $end
$var wire 1 -! ww_saida [11] $end
$var wire 1 .! ww_saida [10] $end
$var wire 1 /! ww_saida [9] $end
$var wire 1 0! ww_saida [8] $end
$var wire 1 1! ww_saida [7] $end
$var wire 1 2! ww_saida [6] $end
$var wire 1 3! ww_saida [5] $end
$var wire 1 4! ww_saida [4] $end
$var wire 1 5! ww_saida [3] $end
$var wire 1 6! ww_saida [2] $end
$var wire 1 7! ww_saida [1] $end
$var wire 1 8! ww_saida [0] $end
$var wire 1 9! ww_dado_simula [31] $end
$var wire 1 :! ww_dado_simula [30] $end
$var wire 1 ;! ww_dado_simula [29] $end
$var wire 1 <! ww_dado_simula [28] $end
$var wire 1 =! ww_dado_simula [27] $end
$var wire 1 >! ww_dado_simula [26] $end
$var wire 1 ?! ww_dado_simula [25] $end
$var wire 1 @! ww_dado_simula [24] $end
$var wire 1 A! ww_dado_simula [23] $end
$var wire 1 B! ww_dado_simula [22] $end
$var wire 1 C! ww_dado_simula [21] $end
$var wire 1 D! ww_dado_simula [20] $end
$var wire 1 E! ww_dado_simula [19] $end
$var wire 1 F! ww_dado_simula [18] $end
$var wire 1 G! ww_dado_simula [17] $end
$var wire 1 H! ww_dado_simula [16] $end
$var wire 1 I! ww_dado_simula [15] $end
$var wire 1 J! ww_dado_simula [14] $end
$var wire 1 K! ww_dado_simula [13] $end
$var wire 1 L! ww_dado_simula [12] $end
$var wire 1 M! ww_dado_simula [11] $end
$var wire 1 N! ww_dado_simula [10] $end
$var wire 1 O! ww_dado_simula [9] $end
$var wire 1 P! ww_dado_simula [8] $end
$var wire 1 Q! ww_dado_simula [7] $end
$var wire 1 R! ww_dado_simula [6] $end
$var wire 1 S! ww_dado_simula [5] $end
$var wire 1 T! ww_dado_simula [4] $end
$var wire 1 U! ww_dado_simula [3] $end
$var wire 1 V! ww_dado_simula [2] $end
$var wire 1 W! ww_dado_simula [1] $end
$var wire 1 X! ww_dado_simula [0] $end
$var wire 1 Y! ww_zero $end
$var wire 1 Z! ww_mux1_teste $end
$var wire 1 [! ww_mux2_teste $end
$var wire 1 \! ww_mux3_teste $end
$var wire 1 ]! ww_mux4_teste $end
$var wire 1 ^! ww_habEscReg_teste $end
$var wire 1 _! ww_beq_teste $end
$var wire 1 `! ww_habLeiMEM_teste $end
$var wire 1 a! ww_habEscMEM_teste $end
$var wire 1 b! \clk~input_o\ $end
$var wire 1 c! \reset~input_o\ $end
$var wire 1 d! \saida[0]~output_o\ $end
$var wire 1 e! \saida[1]~output_o\ $end
$var wire 1 f! \saida[2]~output_o\ $end
$var wire 1 g! \saida[3]~output_o\ $end
$var wire 1 h! \saida[4]~output_o\ $end
$var wire 1 i! \saida[5]~output_o\ $end
$var wire 1 j! \saida[6]~output_o\ $end
$var wire 1 k! \saida[7]~output_o\ $end
$var wire 1 l! \saida[8]~output_o\ $end
$var wire 1 m! \saida[9]~output_o\ $end
$var wire 1 n! \saida[10]~output_o\ $end
$var wire 1 o! \saida[11]~output_o\ $end
$var wire 1 p! \saida[12]~output_o\ $end
$var wire 1 q! \saida[13]~output_o\ $end
$var wire 1 r! \saida[14]~output_o\ $end
$var wire 1 s! \saida[15]~output_o\ $end
$var wire 1 t! \saida[16]~output_o\ $end
$var wire 1 u! \saida[17]~output_o\ $end
$var wire 1 v! \saida[18]~output_o\ $end
$var wire 1 w! \saida[19]~output_o\ $end
$var wire 1 x! \saida[20]~output_o\ $end
$var wire 1 y! \saida[21]~output_o\ $end
$var wire 1 z! \saida[22]~output_o\ $end
$var wire 1 {! \saida[23]~output_o\ $end
$var wire 1 |! \saida[24]~output_o\ $end
$var wire 1 }! \saida[25]~output_o\ $end
$var wire 1 ~! \saida[26]~output_o\ $end
$var wire 1 !" \saida[27]~output_o\ $end
$var wire 1 "" \saida[28]~output_o\ $end
$var wire 1 #" \saida[29]~output_o\ $end
$var wire 1 $" \saida[30]~output_o\ $end
$var wire 1 %" \saida[31]~output_o\ $end
$var wire 1 &" \dado_simula[0]~output_o\ $end
$var wire 1 '" \dado_simula[1]~output_o\ $end
$var wire 1 (" \dado_simula[2]~output_o\ $end
$var wire 1 )" \dado_simula[3]~output_o\ $end
$var wire 1 *" \dado_simula[4]~output_o\ $end
$var wire 1 +" \dado_simula[5]~output_o\ $end
$var wire 1 ," \dado_simula[6]~output_o\ $end
$var wire 1 -" \dado_simula[7]~output_o\ $end
$var wire 1 ." \dado_simula[8]~output_o\ $end
$var wire 1 /" \dado_simula[9]~output_o\ $end
$var wire 1 0" \dado_simula[10]~output_o\ $end
$var wire 1 1" \dado_simula[11]~output_o\ $end
$var wire 1 2" \dado_simula[12]~output_o\ $end
$var wire 1 3" \dado_simula[13]~output_o\ $end
$var wire 1 4" \dado_simula[14]~output_o\ $end
$var wire 1 5" \dado_simula[15]~output_o\ $end
$var wire 1 6" \dado_simula[16]~output_o\ $end
$var wire 1 7" \dado_simula[17]~output_o\ $end
$var wire 1 8" \dado_simula[18]~output_o\ $end
$var wire 1 9" \dado_simula[19]~output_o\ $end
$var wire 1 :" \dado_simula[20]~output_o\ $end
$var wire 1 ;" \dado_simula[21]~output_o\ $end
$var wire 1 <" \dado_simula[22]~output_o\ $end
$var wire 1 =" \dado_simula[23]~output_o\ $end
$var wire 1 >" \dado_simula[24]~output_o\ $end
$var wire 1 ?" \dado_simula[25]~output_o\ $end
$var wire 1 @" \dado_simula[26]~output_o\ $end
$var wire 1 A" \dado_simula[27]~output_o\ $end
$var wire 1 B" \dado_simula[28]~output_o\ $end
$var wire 1 C" \dado_simula[29]~output_o\ $end
$var wire 1 D" \dado_simula[30]~output_o\ $end
$var wire 1 E" \dado_simula[31]~output_o\ $end
$var wire 1 F" \zero~output_o\ $end
$var wire 1 G" \mux1_teste~output_o\ $end
$var wire 1 H" \mux2_teste~output_o\ $end
$var wire 1 I" \mux3_teste~output_o\ $end
$var wire 1 J" \mux4_teste~output_o\ $end
$var wire 1 K" \habEscReg_teste~output_o\ $end
$var wire 1 L" \beq_teste~output_o\ $end
$var wire 1 M" \habLeiMEM_teste~output_o\ $end
$var wire 1 N" \habEscMEM_teste~output_o\ $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0!
0"
0C
0D
0E
0F
0G
0H
0I
0J
0k
0l
1m
xn
1o
1p
1q
1r
1s
1t
0u
0v
0Y!
0Z!
0[!
0\!
0]!
0^!
0_!
0`!
0a!
0b!
0c!
0d!
0e!
0f!
0g!
0h!
0i!
0j!
0k!
0l!
0m!
0n!
0o!
0p!
0q!
0r!
0s!
0t!
0u!
0v!
0w!
0x!
0y!
0z!
0{!
0|!
0}!
0~!
0!"
0""
0#"
0$"
0%"
0&"
0'"
0("
0)"
0*"
0+"
0,"
0-"
0."
0/"
00"
01"
02"
03"
04"
05"
06"
07"
08"
09"
0:"
0;"
0<"
0="
0>"
0?"
0@"
0A"
0B"
0C"
0D"
0E"
0F"
0G"
0H"
0I"
0J"
0K"
0L"
0M"
0N"
0w
0x
0y
0z
0{
0|
0}
0~
0!!
0"!
0#!
0$!
0%!
0&!
0'!
0(!
0)!
0*!
0+!
0,!
0-!
0.!
0/!
00!
01!
02!
03!
04!
05!
06!
07!
08!
09!
0:!
0;!
0<!
0=!
0>!
0?!
0@!
0A!
0B!
0C!
0D!
0E!
0F!
0G!
0H!
0I!
0J!
0K!
0L!
0M!
0N!
0O!
0P!
0Q!
0R!
0S!
0T!
0U!
0V!
0W!
0X!
0#
0$
0%
0&
0'
0(
0)
0*
0+
0,
0-
0.
0/
00
01
02
03
04
05
06
07
08
09
0:
0;
0<
0=
0>
0?
0@
0A
0B
0K
0L
0M
0N
0O
0P
0Q
0R
0S
0T
0U
0V
0W
0X
0Y
0Z
0[
0\
0]
0^
0_
0`
0a
0b
0c
0d
0e
0f
0g
0h
0i
0j
$end
#50000
1"
1u
1b!
#100000
0"
0u
0b!
#150000
1"
1u
1b!
#200000
0"
0u
0b!
#250000
1"
1u
1b!
#300000
0"
0u
0b!
#350000
1"
1u
1b!
#400000
0"
0u
0b!
#450000
1"
1u
1b!
#500000
0"
0u
0b!
#550000
1"
1u
1b!
#600000
0"
0u
0b!
#650000
1"
1u
1b!
#700000
0"
0u
0b!
#750000
1"
1u
1b!
#800000
0"
0u
0b!
#850000
1"
1u
1b!
#900000
0"
0u
0b!
#950000
1"
1u
1b!
#1000000
