// Copyright (C) 1991-2016 Altera Corporation. All rights reserved.
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, the Altera Quartus Prime License Agreement,
// the Altera MegaCore Function License Agreement, or other 
// applicable license agreement, including, without limitation, 
// that your use is for the sole purpose of programming logic 
// devices manufactured by Altera and sold by Altera or its 
// authorized distributors.  Please refer to the applicable 
// agreement for further details.

// *****************************************************************************
// This file contains a Verilog test bench with test vectors .The test vectors  
// are exported from a vector file in the Quartus Waveform Editor and apply to  
// the top level entity of the current Quartus project .The user can use this   
// testbench to simulate his design using a third-party simulation tool .       
// *****************************************************************************
// Generated on "11/01/2018 15:28:58"
                                                                                
// Verilog Test Bench (with test vectors) for design :                          mips_teste
// 
// Simulation tool : 3rd Party
// 

`timescale 1 ps/ 1 ps
module mips_teste_vlg_vec_tst();
// constants                                           
// general purpose registers
reg clk;
// wires                                               
wire [4:0] end1;
wire [4:0] end2;
wire [4:0] end3;
wire [31:0] entrada1_ULA;
wire [31:0] entrada2_ULA;
wire [31:0] instrucao;
wire mux_ulamem;
wire [31:0] Reg3;
wire [31:0] saida;
wire [31:0] saida2Regs;
wire [31:0] saidaExtensor;
wire [3:0] ula_control;

// assign statements (if any)                          
mips_teste i1 (
// port map - connection between master ports and signals/registers   
	.clk(clk),
	.end1(end1),
	.end2(end2),
	.end3(end3),
	.entrada1_ULA(entrada1_ULA),
	.entrada2_ULA(entrada2_ULA),
	.instrucao(instrucao),
	.mux_ulamem(mux_ulamem),
	.Reg3(Reg3),
	.saida(saida),
	.saida2Regs(saida2Regs),
	.saidaExtensor(saidaExtensor),
	.ula_control(ula_control)
);
initial 
begin 
#1000000 $finish;
end 

// clk
initial
begin
	repeat(8)
	begin
		clk = 1'b0;
		clk = #60000 1'b1;
		# 60000;
	end
	clk = 1'b0;
end 
endmodule

