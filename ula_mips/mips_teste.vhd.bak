library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.NUMERIC_STD.ALL;

entity mips_teste is
port( 
		  clk, reset: in std_logic; 
        saida : out std_logic_vector(31 downto 0);
		  zero : out std_logic;
		  
		  ULAop_aux : in std_logic_vector(1 downto 0);

		  ula_ctrl_aux : in std_logic_vector(3 downto 0);

		  op_code_aux, funct_aux : in std_logic_vector(5 downto 0);

		  mux1_aux, mux2_aux, mux3_aux, mux4_aux, habEscReg_aux, beq_aux, habLeiMEM_aux, habEscMEM_aux : in std_logic;

		  A_aux, B_aux : in std_logic_vector(31 downto 0)
        );
end mips;

architecture Behavioral of mips_teste is

begin

fd_ctrl: entity work.fd_ctrl
		Port map(op_code => op_code_aux, mux1 => mux1_aux, mux2 => mux2_aux, habEscReg => habEscReg_aux, 
					mux3 => mux3_aux, mux4 => mux4_aux, beq => beq_aux, habLeiMEM => habLeiMEM_aux, 
					habEscMEM => habEscMEM_aux, ULAop => ULAop_aux);
					
ula_ctrl: entity work.ula_ctrl
		Port map(ULAop => ULAop_aux, funct => funct_aux, ula_ctrl => ula_ctrl_aux);
		
ula: entity work.ula_mips
		Port map(A => A_aux, B => B_aux, ula_ctrl => ula_ctrl_aux, Q => saida, zero => zero);

end Behavioral;